/*
 * This is a CrySL specification for the Google Tink implementation of 
 * the class StreamingAeadKeyTemplates. 
 * 
 * Note: in this case, we are not specifying the correct usage of the 
 * API, but actually guaranteeing that the Google Tink API implementation 
 * actually exposes some key templates as static attributes. This 
 * information simplifies the specification of other properties for 
 * correctly using the API. 
 * 
 * 
 * It constraints the use of the API to the following key templates: 
 * 
 * - 
 */

SPEC com.google.crypto.tink.streamingaead.StreamingAeadKeyTemplates

OBJECTS
	com.google.crypto.tink.proto.KeyTemplate aes_ctr_hmac_sha256_4kb;
	com.google.crypto.tink.proto.KeyTemplate aes_gcm_hkdf_4kb; 
		
	int baseKey;
	int derivedKey; 
	int tag32;
	int segmentSize; 
	
	int hashType;  // HashType enum: (1) - SHA1, (3) - SHA256, and (4) - SHA 512. 
	
EVENTS
   	aes_ctr_hmac_sha256_4kb: aes_ctr_hmac_sha256_4kb = createAesCtrHmacStreamingKeyTemplate(baseKey, hashType, derivedKey, hashType, tag32, segmentSize);
	aes_gcm_hkdf_4kb : aes_gcm_hkdf_4kb = createAesGcmHkdfStreamingKeyTemplate(baseKey, hashType, derivedKey, segmentSize);
	
	CreateKeyTemplates := aes_ctr_hmac_sha256_4kb | aes_gcm_hkdf_4kb;
	
ORDER 
	(CreateKeyTemplates)*	

CONSTRAINTS
	baseKey in {16, 32};
	derivedKey == baseKey; 
	tag32 == 32; 
	segmentSize == 4096;
	hashType == 3; 
	
ENSURES
	keyTemplate[aes_ctr_hmac_sha256_4kb] after aes_ctr_hmac_sha256_4kb;
	keyTemplate[aes_gcm_hkdf_4kb] after aes_gcm_hkdf_4kb;
	
	