SPEC org.bouncycastle.crypto.BufferedBlockCipher

OBJECTS
	org.bouncycastle.crypto.BlockCipher mode;
	org.bouncycastle.crypto.CipherParameters params;
	org.bouncycastle.crypto.engines.AESLightEngine engine; //required for c2
	
	int pre_plain_off;
	int pre_ciphertext_off;
	int ciphertext_off;
	
	int pre_len;
	boolean is_encryption;
	
	byte[] pre_plaintext;
	byte[] pre_ciphertext;
	
	byte[] cipherText;
	byte dummy;
	
	
EVENTS

	c1 : BufferedBlockCipher(mode);
//	c2 : BufferedBlockCipher(engine); //required for BlockCipherVectorTest & BlockCipherMonteCarloTest
	Cons := c1 | c2;

	i : init(is_encryption, params);
	Inits := i;

//	@return the number of output bytes copied to out.
	p1: processByte(dummy, pre_ciphertext, pre_ciphertext_off);
	p2: processBytes(pre_plaintext, pre_plain_off, pre_len, pre_ciphertext, pre_ciphertext_off);
	Procs := p1 | p2;
	
//	@return the number of output bytes copied to out.
	f : doFinal(cipherText, ciphertext_off);
	DOFINALS := f;
	
ORDER
	Cons, (Inits, Procs, DOFINALS)+
	
CONSTRAINTS
	length(pre_plaintext) >= pre_plain_off + pre_len;
    length(pre_ciphertext) <= pre_ciphertext_off;
    length(cipherText) <= ciphertext_off;
	
REQUIRES
	generatedMode[mode];
	generatedKey[params];
	preparedIV[params]; //this is added for AESTest
//	generatedEngine[engine];
	
ENSURES
	encrypted[pre_ciphertext] after Procs;