SPEC org.bouncycastle.crypto.signers.RSADigestSigner

OBJECTS
	org.bouncycastle.crypto.Digest digest;
//	org.bouncycastle.asn1.ASN1ObjectIdentifier digestOid;
	org.bouncycastle.crypto.CipherParameters params;
	byte inpb;
	byte[] inpba;
	int offset;
	int len;
	byte[] out;
	byte[] sign;
	boolean is_encryption;
	
EVENTS
	c1 : RSADigestSigner(digest);
	c2 : RSADigestSigner(digest, _);
	
	i : init(is_encryption, params);
	Inits := i;
	
	u1 : update(inpb);
	u2 : update(inpba, offset, len);
	Updates := u1 | u2;
	
	g : out = generateSignature();
	Signs := g;
	
	v : verifySignature(sign);
	Verify := v;
	
ORDER
	(c1, (Inits+, (Updates+, Signs+)+ )+) | (c2, (Inits+, (Updates*, Verify+)+ )+ )	// based on Signature.cryptsl
//	((c1, Inits, Updates+, Gen) | (c2, Inits, Updates+, Verify))+	// based on test cases
//	((c2, Inits, Updates+, Verify))+	// works
	
REQUIRES
	generatedDigest[digest];
	generatedRSAKeyParams[params]; // if is_encryption false
//	generatedRSAPrivateCrtKeyParam[params] if is_encryption true

ENSURES
	signed[out, inpb] after Signs;
    signed[out, inpba] after Signs;
    verified[sign];
	