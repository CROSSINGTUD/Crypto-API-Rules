SPEC org.bouncycastle.crypto.modes.GCMBlockCipher

OBJECTS
	org.bouncycastle.crypto.BlockCipher engine;
	org.bouncycastle.crypto.CipherParameters params;
	
	byte aadByte;
	byte[] aadBytes;
	int aadOff;
	int aadLen;
	
	byte plainTextByte;
	byte[] plainText;
	int plainTextOff;
	int plainTextLen;
	
	byte[] cipherText;
	int cipherTextOff;
	
	boolean isEncryption;
	
EVENTS
	c1: GCMBlockCipher(engine);
	Con := c1;
	
	i1: init(isEncryption, params);
	init := i1;
	
	pa1: processAADByte(aadByte);
	pa2: processAADBytes(aadBytes, aadOff, aadLen);
	ProcessAAD := pa1 | pa2;
	
	p1: processByte(plainTextByte, cipherText, cipherTextOff);
	p2: processBytes(plainText, plainTextOff, plainTextLen, cipherText, cipherTextOff);
	Process := p1 | p2;
	
	df1: doFinal(cipherText, cipherTextOff);
	DoFinal := df1;
	
ORDER
	Con, Init, Process+, DoFinal
	
CONSTRAINTS
	neverTypeOf[engine, org.bouncycastle.crypto.engines.AESFastEngine];
	length[aadBytes] >= aadOff + aadLen;
	length[plainText] >= plainTextOff + plainTextLen;
	length[cipherText] >= cipherTextOff;

REQUIRES
	generatedAESEngine[engine] || generatedAESLightEngine[engine];
	generatedAEADParameters[params] || generatedParametersWithIV[params];
	
ENSURES
	generatedGCMBlockCipherMode[this] after Con;

