SPEC org.bouncycastle.crypto.BufferedBlockCipher

OBJECTS
	org.bouncycastle.crypto.BlockCipher cipher;
	org.bouncycastle.crypto.CipherParameters params;
	
	byte plainTextByte;
	byte[] plainText;
	int plainTextOff;
	int plainTextLen;
	
	byte[] cipherText;
	int cipherTextOff;
	
	boolean isEncryption;

	
EVENTS
	c1: BufferedBlockCipher(cipher);
	Con := c1;

	i1: init(isEncryption, params);
	Init := i1;

//	@return the number of output bytes copied to out.
	p1: processByte(plainTextByte, cipherText, cipherTextOff);
	p2: processBytes(plainText, plainTextOff, plainTextLen, cipherText, cipherTextOff);
	Proc := p1 | p2;
	
//	@return the number of output bytes copied to out.
	df1: doFinal(cipherText, cipherTextOff);
	DoFinal := df1;
	
ORDER
	Con, (Init, Proc, DoFinal)+
	
CONSTRAINTS
	length[plainText] >= plainTextOff + plainTextLen;
	length[cipherText] >= cipherTextOff;
	
REQUIRES
	generatedGCMBlockCipher[cipher];
	generatedCipherParams[params];
	
ENSURES
	encrypted[cipherText];
