SPEC java.security.SecureRandom

OBJECTS 
	byte[] seed;
	byte[] genSeed;
	java.lang.String randomAlgorithm;
	long lSeed;
	byte[] next;
	int numB;
	int randInt;
	
EVENTS
	c1: SecureRandom();
	c2: SecureRandom(seed);
	Cons := c1 | c2;
	
	g1: getInstance(randomAlgorithm);
	g2: getInstance(randomAlgorithm, _);
	gI: getInstanceStrong();
	Gets := g1 | g2 | gI;
	
	Ins := Gets | Cons;

	s1: setSeed(seed);
	s2: setSeed(lSeed);
	Seeds := s1 | s2;

	gS: genSeed = generateSeed(_);	

	ne: next(numB);
	nB: nextBytes(next);
	nI: randInt = nextInt();
	Nexts := ne | nB | nI;
	
	Ends := gS | Nexts;

ORDER
 	Ins, (Seeds?, Ends*)*
 	
CONSTRAINTS
	randomAlgorithm in {"SHA1PRNG", "Windows-PRNG", "NativePRNG", "NativePRNGBlocking", "NativePRNGNonBlocking", "PKCS11"};
	
REQUIRES	
	randomized[seed];
	randomized[lSeed];
	
ENSURES
	randomized[this] after Ins;
	randomized[genSeed] after gS;
	randomized[next] after nB;
	randomized[numB] after ne;
	randomized[randInt] after nI;